{
    "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
    "runs": [
        {
            "results": [
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function constructor"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 30
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Dependence_on_tx_origin"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function AdjustDifficulty(uint256)"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 18
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Dependence_on_tx_origin"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function wager()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 30
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Dependence_on_tx_origin"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function play()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 30
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Dependence_on_tx_origin"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function AdjustBetAmounts(uint256)"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 18
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Dependence_on_tx_origin"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function transferAnyERC20Token(address,address,uint256)"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 18
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Dependence_on_tx_origin"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function transferAnyERC20Token(address,address,uint256)"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 289
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_External_Call_To_User_Supplied_Address"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function donate()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 201
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_External_Call_To_User_Supplied_Address"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function donate()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 201
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.\nClassification: SWC-104\nSeverity: Medium"
                    },
                    "ruleId": "mythril_0_23_5_Unchecked_return_value_from_external_call"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function donate()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 202
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107\nSeverity: Medium"
                    },
                    "ruleId": "mythril_0_23_5_State_access_after_external_call"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function donate()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 202
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107\nSeverity: Medium"
                    },
                    "ruleId": "mythril_0_23_5_State_access_after_external_call"
                },
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract PoCGame, function donate()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/unchecked_low_level_calls/0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol"
                                },
                                "region": {
                                    "startLine": 203
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107\nSeverity: Medium"
                    },
                    "ruleId": "mythril_0_23_5_State_access_after_external_call"
                }
            ],
            "tool": {
                "driver": {
                    "informationUri": "https://github.com/ConsenSys/mythril",
                    "name": "Mythril",
                    "rules": [
                        {
                            "fullDescription": {
                                "text": "Use of tx.origin as a part of authorization control. The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead. Classification: SWC-115. Detection method: Check whether control flow decisions are influenced by tx.origin"
                            },
                            "help": {
                                "text": "The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead."
                            },
                            "id": "mythril_0_23_5_Dependence_on_tx_origin",
                            "name": "Dependence on tx.origin",
                            "properties": {
                                "security-severity": "2.0"
                            },
                            "shortDescription": {
                                "text": "Use of tx.origin as a part of authorization control."
                            }
                        },
                        {
                            "fullDescription": {
                                "text": "A call to a user-supplied address is executed. An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place. Classification: SWC-107. Detection method: Search for external calls with unrestricted gas to a user-specified address."
                            },
                            "help": {
                                "text": "An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place."
                            },
                            "id": "mythril_0_23_5_External_Call_To_User_Supplied_Address",
                            "name": "External Call To User-Supplied Address",
                            "properties": {
                                "security-severity": "2.0"
                            },
                            "shortDescription": {
                                "text": "A call to a user-supplied address is executed."
                            }
                        },
                        {
                            "fullDescription": {
                                "text": "The return value of a message call is not checked. External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails. Classification: SWC-104. Detection method: Test whether CALL return value is checked. For direct calls, the Solidity compiler auto-generates this check. For low-level-calls this check is omitted."
                            },
                            "help": {
                                "text": "External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails."
                            },
                            "id": "mythril_0_23_5_Unchecked_return_value_from_external_call",
                            "name": "Unchecked return value from external call.",
                            "properties": {
                                "security-severity": "5.5"
                            },
                            "shortDescription": {
                                "text": "The return value of a message call is not checked."
                            }
                        },
                        {
                            "fullDescription": {
                                "text": "Read of/Write to persistent state following external call The contract account state is accessed after an external call to a user-defined/fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. Classification: SWC-107. Detection method: Check whether the account state is accesses after the execution of an external call"
                            },
                            "help": {
                                "text": "The contract account state is accessed after an external call to a user-defined/fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state."
                            },
                            "id": "mythril_0_23_5_State_access_after_external_call",
                            "name": "State access after external call",
                            "shortDescription": {
                                "text": "Read of/Write to persistent state following external call"
                            }
                        }
                    ],
                    "version": "0.23.5"
                }
            }
        }
    ],
    "version": "2.1.0"
}
