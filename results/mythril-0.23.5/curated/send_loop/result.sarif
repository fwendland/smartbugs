{
    "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
    "runs": [
        {
            "results": [
                {
                    "locations": [
                        {
                            "message": {
                                "text": "contract Refunder, function refundAll()"
                            },
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dataset/denial_of_service/send_loop.sol"
                                },
                                "region": {
                                    "startLine": 24
                                }
                            }
                        }
                    ],
                    "message": {
                        "text": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).\nClassification: SWC-113\nSeverity: Low"
                    },
                    "ruleId": "mythril_0_23_5_Multiple_Calls_in_a_Single_Transaction"
                }
            ],
            "tool": {
                "driver": {
                    "informationUri": "https://github.com/ConsenSys/mythril",
                    "name": "Mythril",
                    "rules": [
                        {
                            "fullDescription": {
                                "text": "Multiple calls are executed in the same transaction. This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase). Classification: SWC-113. Detection method: Check for multiple sends in a single transaction"
                            },
                            "help": {
                                "text": "This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase)."
                            },
                            "id": "mythril_0_23_5_Multiple_Calls_in_a_Single_Transaction",
                            "name": "Multiple Calls in a Single Transaction",
                            "properties": {
                                "security-severity": "2.0"
                            },
                            "shortDescription": {
                                "text": "Multiple calls are executed in the same transaction."
                            }
                        }
                    ],
                    "version": "0.23.5"
                }
            }
        }
    ],
    "version": "2.1.0"
}
