Non-hexadecimal digit found
Traceback (most recent call last):
  File "conkas.py", line 105, in main
    ssa = Recover(bytecode, edges=[], optimize=True)
  File "/conkas/rattle/recover.py", line 768, in __init__
    self.internal = InternalRecover(filedata, edges, optimize, split_functions)
  File "/conkas/rattle/recover.py", line 32, in __init__
    self.recover(dispatch)
  File "/conkas/rattle/recover.py", line 95, in recover
    self.identify_blocks(function)
  File "/conkas/rattle/recover.py", line 167, in identify_blocks
    insns = list(EVMAsm.disassemble_all(binascii.unhexlify(self.filedata), 0))
binascii.Error: Non-hexadecimal digit found
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Analysing /sb/spank_chain_payment.sol:ECTools...
Vulnerability: Integer Underflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x13ab. Line number: 159.
If a = 0
and b = 1
Vulnerability: Integer Overflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x434. Line number: 139.
If a = 31
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639912
Vulnerability: Integer Underflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x1353. Line number: 155.
If a = 0
and b = 1
Vulnerability: Integer Overflow. Maybe in function: parseInt16Char(string). PC: 0x325. Line number: 116.
If a = 32
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639900
Analysing /sb/spank_chain_payment.sol:HumanStandardToken...
Vulnerability: Integer Overflow. Maybe in function: transfer(address,uint256). PC: 0xc05. Line number: 189.
If a = 115792089237316195423570985008687907852929702298719625575978118128125791058130
and b = 57896044618658097711785492504343953926464851149359812787964138725462632058266
Vulnerability: Integer Overflow. Maybe in function: transferFrom(address,address,uint256). PC: 0x83c. Line number: 198.
If a = 27171265682518565951931386646857699698079857587279708413857048386294206447937
and b = 88890558809918639335918705687582929189360757312544399828066553721196731439939
Vulnerability: Reentrancy. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0xefe. Line number: 259.
Vulnerability: Integer Overflow. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0x4b2. Line number: 252.
If a = 4
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639932
Analysing /sb/spank_chain_payment.sol:LedgerChannel...
Analysing /sb/spank_chain_payment.sol:StandardToken...
Vulnerability: Integer Overflow. Maybe in function: transferFrom(address,address,uint256). PC: 0x4db. Line number: 198.
If a = 115792089237316195423570985008687907852929702298719625575975762656407651897078
and b = 28948022309329048855892746252171976963317496166410141009845949257904572663538
Vulnerability: Integer Overflow. Maybe in function: transfer(address,uint256). PC: 0x755. Line number: 189.
If a = 76015795683867588862240854898620568808205025180131782809252844146284884311185
and b = 66672598031297837212685058347932249438141301834138098956469011551479045399415
Analysing /sb/spank_chain_payment.sol:Token...
Nothing to analyse
