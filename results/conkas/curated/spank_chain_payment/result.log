Non-hexadecimal digit found
Traceback (most recent call last):
  File "conkas.py", line 105, in main
    ssa = Recover(bytecode, edges=[], optimize=True)
  File "/conkas/rattle/recover.py", line 768, in __init__
    self.internal = InternalRecover(filedata, edges, optimize, split_functions)
  File "/conkas/rattle/recover.py", line 32, in __init__
    self.recover(dispatch)
  File "/conkas/rattle/recover.py", line 95, in recover
    self.identify_blocks(function)
  File "/conkas/rattle/recover.py", line 167, in identify_blocks
    insns = list(EVMAsm.disassemble_all(binascii.unhexlify(self.filedata), 0))
binascii.Error: Non-hexadecimal digit found
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Analysing /data/spank_chain_payment.sol:ECTools...
Vulnerability: Integer Overflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x443. Line number: 139.
If a = 128
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639752
Vulnerability: Integer Overflow. Maybe in function: parseInt16Char(string). PC: 0x334. Line number: 116.
If a = 32
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639873
Vulnerability: Integer Underflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x13ab. Line number: 159.
If a = 0
and b = 1
Vulnerability: Integer Underflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x1353. Line number: 155.
If a = 0
and b = 1
Analysing /data/spank_chain_payment.sol:HumanStandardToken...
Vulnerability: Integer Overflow. Maybe in function: transferFrom(address,address,uint256). PC: 0x83c. Line number: 198.
If a = 58378504303435020302924441634280438179992607237626360598563000034962430583044
and b = 66617257383040588241413557812116969992918816540317342210246199096365755321150
Vulnerability: Integer Overflow. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0x4be. Line number: 252.
If a = 31
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639912
Vulnerability: Reentrancy. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0xefe. Line number: 259.
Vulnerability: Integer Overflow. Maybe in function: transfer(address,uint256). PC: 0xc05. Line number: 189.
If a = 87183551820606013114582685482565051515165414041170989377176211573195722955046
and b = 43139088540165908384399891313125454088464636425009851184943586791840914250390
Analysing /data/spank_chain_payment.sol:LedgerChannel...
Analysing /data/spank_chain_payment.sol:StandardToken...
Vulnerability: Integer Overflow. Maybe in function: transfer(address,uint256). PC: 0x755. Line number: 189.
If a = 7769323946189773332217502079500367245239707436628726121612043007944893146336
and b = 109920473404773566448495199096857564844230080642229590684023810592281109493024
Vulnerability: Integer Overflow. Maybe in function: transferFrom(address,address,uint256). PC: 0x4db. Line number: 198.
If a = 115792089237316195423570985008687907852929702298719625575975762656407651878881
and b = 57896044618658097711785492504343953926464851149359812787978657956166970913055
Analysing /data/spank_chain_payment.sol:Token...
Nothing to analyse